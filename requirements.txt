# Enhanced Water Damage Lead Generation System - Requirements
# Storm-Chasing Intelligence Engine with VTEC, MRMS, AHPS, and NFHL Integration

# Core Dependencies (Required)
# =============================
aiohttp>=3.8.0,<4.0.0              # Async HTTP client for API calls
asyncio-throttle>=1.0.2             # Rate limiting for API requests

# Data Processing & Analysis
# ==========================
numpy>=1.24.0,<2.0.0               # Numerical computing for data analysis
pandas>=2.0.0,<3.0.0               # Data manipulation and analysis (optional but recommended)

# Geospatial & Weather Data Processing (Enhanced Features)
# ========================================================
shapely>=2.0.0,<3.0.0              # Geometric operations for NFHL flood-plain filtering
rasterio>=1.3.0,<2.0.0             # GeoTIFF processing for MRMS radar data
fiona>=1.9.0,<2.0.0                # Geospatial file I/O (dependency of shapely)
pyproj>=3.4.0,<4.0.0               # Cartographic projections (dependency of rasterio)

# Optional GIS Enhancements
# =========================
rtree>=1.0.0,<2.0.0                # Spatial indexing for performance (optional)
geopandas>=0.13.0,<1.0.0           # Geospatial data analysis (optional advanced feature)

# Development & Testing
# =====================
pytest>=7.0.0,<8.0.0               # Testing framework
pytest-asyncio>=0.21.0,<1.0.0      # Async testing support
pytest-cov>=4.0.0,<5.0.0           # Code coverage reporting
black>=23.0.0,<24.0.0              # Code formatting
flake8>=6.0.0,<7.0.0               # Code linting
mypy>=1.0.0,<2.0.0                 # Static type checking

# Production Deployment
# =====================
gunicorn>=20.1.0,<21.0.0           # WSGI HTTP Server for production
uvicorn>=0.20.0,<1.0.0             # ASGI server for async applications
uvloop>=0.17.0,<1.0.0              # Fast event loop for Linux/macOS

# Monitoring & Logging
# ====================
structlog>=23.0.0,<24.0.0          # Structured logging
sentry-sdk>=1.20.0,<2.0.0          # Error tracking and monitoring

# Environment & Configuration
# ===========================
python-dotenv>=1.0.0,<2.0.0       # Environment variable management
pydantic>=2.0.0,<3.0.0             # Data validation and settings management

# Optional Performance Enhancements
# ==================================
ujson>=5.7.0,<6.0.0               # Fast JSON parsing (optional)
orjson>=3.8.0,<4.0.0              # Ultra-fast JSON serialization (alternative to ujson)
lxml>=4.9.0,<5.0.0                # Fast XML processing for AHPS data

# Render.com Specific (Cloud Deployment)
# ======================================
# Note: These are automatically handled by Render
# psycopg2-binary>=2.9.5,<3.0.0   # PostgreSQL adapter (if using database)
# redis>=4.5.0,<5.0.0             # Redis client (if using caching)
# Weather Data APIs (No additional packages required)
# ==================================================
# - National Weather Service API (api.weather.gov) - No auth required
# - USGS Water Services API - No auth required  
# - NOAA MRMS via NCEP - No auth required
# - NOAA AHPS XML - No auth required
# - FEMA NFHL ArcGIS REST - No auth required
# - OpenWeather API - Requires API key (OPENWEATHER_KEY env var)

# Python Version Requirement
# ==========================
# Requires Python 3.11+ for optimal async performance and typing features

# Installation Notes
# ==================
# 
# For minimal installation (core functionality only):
#   pip install aiohttp numpy
#
# For full enhanced features:
#   pip install -r requirements.txt
#
# For development:
#   pip install -r requirements.txt
#   pip install -e .
#
# Docker/Container deployment:
#   - Use python:3.11-slim base image
#   - Install GDAL/GEOS system libraries for geospatial features:
#     apt-get update && apt-get install -y libgdal-dev libgeos-dev
#
# Render.com deployment:
#   - Add this requirements.txt to your repository
#   - Set Python version to 3.11 in Render dashboard
#   - Add environment variables (OPENWEATHER_KEY, etc.)
#
# Performance Notes:
# ==================
# - Shapely and Rasterio require system libraries (GEOS, GDAL, PROJ)
# - On Alpine Linux, install: geos-dev gdal-dev proj-dev
# - On Ubuntu/Debian: libgeos-dev libgdal-dev libproj-dev
# - On macOS with Homebrew: brew install geos gdal proj
#
# Memory Usage:
# - Core engine: ~50MB RAM
# - With geospatial libraries: ~150MB RAM  
# - Suitable for Render.com free tier (512MB RAM)
#
# API Rate Limits:
# ================
# - NWS API: Generous limits, no key required
# - USGS API: No limits for reasonable use
# - OpenWeather: 1000 calls/day free tier
# - FEMA/NOAA: No published limits, use respectfully
#
# Cost Optimization:
# ==================
# - Target: â‰¤$0.05 per delivered lead
# - Render.com: $7/month for production deployment
# - OpenWeather: Free for development, $40/month for production
# - No other API costs (all other services are free)